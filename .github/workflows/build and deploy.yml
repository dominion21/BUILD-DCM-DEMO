name: Deploy scripts to development


on:
  push:
    branches:
      - dev

  # Allows you to run this workflow manually from the Action tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python   
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install python packages
        run: pip install -r requirements.txt  

  #it would be nice to get rid of this step entirely once SnowCLI supports using only env variables
      - name:  Configure SnowCLI
        env:    
          SNOWFLAKE_CONNECTIONS_DEV_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        run: |
          cd   $GITHUB_WORKSPACE
          echo "[connections]" > config.toml
          echo "[connections.dev]"  >> config.toml
          echo "account = \"SNOWFLAKE_CONNECTIONS_DEV_ACCOUNT\""  >> config.toml

      - name: Deploy demo objects
        env:
          SNOWFLAKE_CONNECTIONS_DEV_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_CONNECTIONS_DEV_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_CONNECTIONS_DEV_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_CONNECTIONS_DEV_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_CONNECTIONS_DEV_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_CONNECTIONS_DEV_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_CONNECTIONS_DEV_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          snow --config-file   $GITHUB_WORKSPACE/config.toml sql -q "ALTER GIT REPOSITORY demo_repo FETCH" 
          snow --config-file   $GITHUB_WORKSPACE/config.toml sql -q  "demo_repo/branches/dev/.github/workflows/scripts/02_execute_immediate.sql"  
